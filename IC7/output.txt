Python
is
an
interpreted
high-level
programming
language
for
general-purpose
programming
.
Created
by
Guido
van
Rossum
and
first
released
in
1991
,
Python
has
a
design
philosophy
that
emphasizes
code
readability
,
and
a
syntax
that
allows
programmers
to
express
concepts
in
fewer
lines
of
code
,
[
25
]
[
26
]
notably
using
significant
whitespace
.
It
provides
constructs
that
enable
clear
programming
on
both
small
and
large
scales
.
[
27
]
Python
features
a
dynamic
type
system
and
automatic
memory
management
.
It
supports
multiple
programming
paradigms
,
including
object-oriented
,
imperative
,
functional
and
procedural
,
and
has
a
large
and
comprehensive
standard
library
.
[
28
]
Python
interpreters
are
available
for
many
operating
systems
.
CPython
,
the
reference
implementation
of
Python
,
is
open
source
software
[
29
]
and
has
a
community-based
development
model
,
as
do
nearly
all
of
its
variant
implementations
.
CPython
is
managed
by
the
non-profit
Python
Software
Foundation
.
Python
was
conceived
in
the
late
1980s
,
[
30
]
and
its
implementation
began
in
December
1989
[
31
]
by
Guido
van
Rossum
at
Centrum
Wiskunde
&
Informatica
(
CWI
)
in
the
Netherlands
as
a
successor
to
the
ABC
language
(
itself
inspired
by
SETL
)
[
32
]
capable
of
exception
handling
and
interfacing
with
the
Amoeba
operating
system
.
[
6
]
Van
Rossum
remains
Python
's
principal
author
.
His
continuing
central
role
in
Python
's
development
is
reflected
in
the
title
given
to
him
by
the
Python
community
:
Benevolent
Dictator
For
Life
(
BDFL
)
.
On
the
origins
of
Python
,
Van
Rossum
wrote
in
1996
:
[
33
]
...
In
December
1989
,
I
was
looking
for
a
``
hobby
''
programming
project
that
would
keep
me
occupied
during
the
week
around
Christmas
.
My
office
...
would
be
closed
,
but
I
had
a
home
computer
,
and
not
much
else
on
my
hands
.
I
decided
to
write
an
interpreter
for
the
new
scripting
language
I
had
been
thinking
about
lately
:
a
descendant
of
ABC
that
would
appeal
to
Unix/C
hackers
.
I
chose
Python
as
a
working
title
for
the
project
,
being
in
a
slightly
irreverent
mood
(
and
a
big
fan
of
Monty
Python
's
Flying
Circus
)
.
Python
2.0
was
released
on
16
October
2000
and
had
many
major
new
features
,
including
a
cycle-detecting
garbage
collector
and
support
for
Unicode
.
With
this
release
,
the
development
process
became
more
transparent
and
community-backed
.
[
34
]
Python
3.0
(
initially
called
Python
3000
or
py3k
)
was
released
on
3
December
2008
after
a
long
testing
period
.
It
is
a
major
revision
of
the
language
that
is
not
completely
backward-compatible
with
previous
versions
.
[
35
]
However
,
many
of
its
major
features
have
been
backported
to
the
Python
2.6.x
[
36
]
and
2.7.x
version
series
,
and
releases
of
Python
3
include
the
2to3
utility
,
which
automates
the
translation
of
Python
2
code
to
Python
3
.
[
37
]
Python
2.7
's
end-of-life
date
(
a.k.a
.
EOL
,
sunset
date
)
was
initially
set
at
2015
,
then
postponed
to
2020
out
of
concern
that
a
large
body
of
existing
code
could
not
easily
be
forward-ported
to
Python
3
.
[
38
]
[
39
]
Python
3.6
had
changes
regarding
UTF-8
(
in
Windows
,
PEP
528
and
PEP
529
)
and
Python
3.7.0b1
(
PEP
540
)
adds
a
new
``
UTF-8
Mode
''
(
and
overrides
POSIX
locale
)
.
In
January
2017
,
Google
announced
work
on
a
Python
2.7
to
Go
transcompiler
to
improve
performance
under
concurrent
workloads
.
[
40
]
Python
is
a
multi-paradigm
programming
language
.
Object-oriented
programming
and
structured
programming
are
fully
supported
,
and
many
of
its
features
support
functional
programming
and
aspect-oriented
programming
(
including
by
metaprogramming
[
41
]
and
metaobjects
(
magic
methods
)
)
.
[
42
]
Many
other
paradigms
are
supported
via
extensions
,
including
design
by
contract
[
43
]
[
44
]
and
logic
programming
.
[
45
]
Python
uses
dynamic
typing
,
and
a
combination
of
reference
counting
and
a
cycle-detecting
garbage
collector
for
memory
management
.
It
also
features
dynamic
name
resolution
(
late
binding
)
,
which
binds
method
and
variable
names
during
program
execution
.
Python
's
design
offers
some
support
for
functional
programming
in
the
Lisp
tradition
.
It
has
filter
(
)
,
map
(
)
,
and
reduce
(
)
functions
;
list
comprehensions
,
dictionaries
,
and
sets
;
and
generator
expressions
.
[
46
]
The
standard
library
has
two
modules
(
itertools
and
functools
)
that
implement
functional
tools
borrowed
from
Haskell
and
Standard
ML
.
[
47
]
The
language
's
core
philosophy
is
summarized
in
the
document
The
Zen
of
Python
(
PEP
20
)
,
which
includes
aphorisms
such
as
:
[
48
]
Rather
than
having
all
of
its
functionality
built
into
its
core
,
Python
was
designed
to
be
highly
extensible
.
This
compact
modularity
has
made
it
particularly
popular
as
a
means
of
adding
programmable
interfaces
to
existing
applications
.
Van
Rossum
's
vision
of
a
small
core
language
with
a
large
standard
library
and
easily
extensible
interpreter
stemmed
from
his
frustrations
with
ABC
,
which
espoused
the
opposite
approach
.
[
30
]
While
offering
choice
in
coding
methodology
,
the
Python
philosophy
rejects
exuberant
syntax
(
such
as
that
of
Perl
)
in
favor
of
a
simpler
,
less-cluttered
grammar
.
As
Alex
Martelli
put
it
:
``
To
describe
something
as
'clever
'
is
not
considered
a
compliment
in
the
Python
culture
.
``
[
49
]
Python
's
philosophy
rejects
the
Perl
``
there
is
more
than
one
way
to
do
it
''
approach
to
language
design
in
favor
of
``
there
should
be
one—and
preferably
only
one—obvious
way
to
do
it
''
.
[
48
]
Python
's
developers
strive
to
avoid
premature
optimization
,
and
reject
patches
to
non-critical
parts
of
CPython
that
would
offer
marginal
increases
in
speed
at
the
cost
of
clarity
.
[
50
]
When
speed
is
important
,
a
Python
programmer
can
move
time-critical
functions
to
extension
modules
written
in
languages
such
as
C
,
or
use
PyPy
,
a
just-in-time
compiler
.
Cython
is
also
available
,
which
translates
a
Python
script
into
C
and
makes
direct
C-level
API
calls
into
the
Python
interpreter
.
An
important
goal
of
Python
's
developers
is
keeping
it
fun
to
use
.
This
is
reflected
in
the
language
's
name—a
tribute
to
the
British
comedy
group
Monty
Python
[
51
]
—and
in
occasionally
playful
approaches
to
tutorials
and
reference
materials
,
such
as
examples
that
refer
to
spam
and
eggs
(
from
a
famous
Monty
Python
sketch
)
instead
of
the
standard
foo
and
bar
.
[
52
]
[
53
]
A
common
neologism
in
the
Python
community
is
pythonic
,
which
can
have
a
wide
range
of
meanings
related
to
program
style
.
To
say
that
code
is
pythonic
is
to
say
that
it
uses
Python
idioms
well
,
that
it
is
natural
or
shows
fluency
in
the
language
,
that
it
conforms
with
Python
's
minimalist
philosophy
and
emphasis
on
readability
.
In
contrast
,
code
that
is
difficult
to
understand
or
reads
like
a
rough
transcription
from
another
programming
language
is
called
unpythonic
.
Users
and
admirers
of
Python
,
especially
those
considered
knowledgeable
or
experienced
,
are
often
referred
to
as
Pythonists
,
Pythonistas
,
and
Pythoneers
.
[
54
]
[
55
]
Python
is
meant
to
be
an
easily
readable
language
.
Its
formatting
is
visually
uncluttered
,
and
it
often
uses
English
keywords
where
other
languages
use
punctuation
.
Unlike
many
other
languages
,
it
does
not
use
curly
brackets
to
delimit
blocks
,
and
semicolons
after
statements
are
optional
.
It
has
fewer
syntactic
exceptions
and
special
cases
than
C
or
Pascal
.
[
56
]
Python
uses
whitespace
indentation
,
rather
than
curly
brackets
or
keywords
,
to
delimit
blocks
.
An
increase
in
indentation
comes
after
certain
statements
;
a
decrease
in
indentation
signifies
the
end
of
the
current
block
.
[
57
]
This
feature
is
also
sometimes
termed
the
off-side
rule
.
Python
's
statements
include
(
among
others
)
:
Python
does
not
support
tail
call
optimization
or
first-class
continuations
,
and
,
according
to
Guido
van
Rossum
,
it
never
will
.
[
59
]
[
60
]
However
,
better
support
for
coroutine-like
functionality
is
provided
in
2.5
,
by
extending
Python
's
generators
.
[
61
]
Before
2.5
,
generators
were
lazy
iterators
;
information
was
passed
unidirectionally
out
of
the
generator
.
From
Python
2.5
,
it
is
possible
to
pass
information
back
into
a
generator
function
,
and
from
Python
3.3
,
the
information
can
be
passed
through
multiple
stack
levels
.
[
62
]
Some
Python
expressions
are
similar
to
languages
such
as
C
and
Java
,
while
some
are
not
:
In
Python
,
a
distinction
between
expressions
and
statements
is
rigidly
enforced
,
in
contrast
to
languages
such
as
Common
Lisp
,
Scheme
,
or
Ruby
.
This
leads
to
duplicating
some
functionality
.
For
example
:
Statements
can
not
be
a
part
of
an
expression
,
so
list
and
other
comprehensions
or
lambda
expressions
,
all
being
expressions
,
can
not
contain
statements
.
A
particular
case
of
this
is
that
an
assignment
statement
such
as
a
=
1
can
not
form
part
of
the
conditional
expression
of
a
conditional
statement
.
This
has
the
advantage
of
avoiding
a
classic
C
error
of
mistaking
an
assignment
operator
=
for
an
equality
operator
==
in
conditions
:
if
(
c
=
1
)
{
...
}
is
syntactically
valid
(
but
probably
unintended
)
C
code
but
if
c
=
1
:
...
causes
a
syntax
error
in
Python
.
Methods
on
objects
are
functions
attached
to
the
object
's
class
;
the
syntax
instance.method
(
argument
)
is
,
for
normal
methods
and
functions
,
syntactic
sugar
for
Class.method
(
instance
,
argument
)
.
Python
methods
have
an
explicit
self
parameter
to
access
instance
data
,
in
contrast
to
the
implicit
self
(
or
this
)
in
some
other
object-oriented
programming
languages
(
e.g.
,
C++
,
Java
,
Objective-C
,
or
Ruby
)
.
[
71
]
Python
uses
duck
typing
and
has
typed
objects
but
untyped
variable
names
.
Type
constraints
are
not
checked
at
compile
time
;
rather
,
operations
on
an
object
may
fail
,
signifying
that
the
given
object
is
not
of
a
suitable
type
.
Despite
being
dynamically
typed
,
Python
is
strongly
typed
,
forbidding
operations
that
are
not
well-defined
(
for
example
,
adding
a
number
to
a
string
)
rather
than
silently
attempting
to
make
sense
of
them
.
Python
allows
programmers
to
define
their
own
types
using
classes
,
which
are
most
often
used
for
object-oriented
programming
.
New
instances
of
classes
are
constructed
by
calling
the
class
(
for
example
,
SpamClass
(
)
or
EggsClass
(
)
)
,
and
the
classes
are
instances
of
the
metaclass
type
(
itself
an
instance
of
itself
)
,
allowing
metaprogramming
and
reflection
.
Before
version
3.0
,
Python
had
two
kinds
of
classes
:
old-style
and
new-style
.
[
72
]
The
syntax
of
both
styles
is
the
same
,
the
difference
being
whether
the
class
object
is
inherited
from
,
directly
or
indirectly
(
all
new-style
classes
inherit
from
object
and
are
instances
of
type
)
.
In
versions
of
Python
2
from
Python
2.2
onwards
,
both
kinds
of
classes
can
be
used
.
Old-style
classes
were
eliminated
in
Python
3.0
.
The
long
term
plan
is
to
support
gradual
typing
[
73
]
and
from
Python
3.5
,
the
syntax
of
the
language
allows
specifying
static
types
but
they
are
not
checked
in
the
default
implementation
,
CPython
.
An
experimental
optional
static
type
checker
named
mypy
supports
compile-time
type
checking
.
[
74
]
a
=
(
4.0
,
'string
'
,
True
)
.__add__
(
(
'hi
'
,
)
)
now
a
gives
(
4.0
,
'string
'
,
True
,
'hi
'
)
Python
has
the
usual
C
arithmetic
operators
(
+
,
-
,
*
,
/
,
%
)
.
It
also
has
**
for
exponentiation
,
e.g
.
5**3
==
125
and
9**0.5
==
3.0
,
and
a
new
matrix
multiply
@
operator
is
included
in
version
3.5
.
[
76
]
Additionally
,
it
has
a
unary
operator
(
~
)
,
which
essentially
inverts
all
the
bits
of
its
one
argument
.
For
integers
,
this
means
~x=-x-1
.
[
77
]
Other
operators
include
bitwise
shift
operators
x
<
<
y
,
which
shifts
x
to
the
left
y
places
,
the
same
as
x*
(
2**y
)
,
and
x
>
>
y
,
which
shifts
x
to
the
right
y
places
,
the
same
as
x/
(
2**y
)
.
[
78
]
The
behavior
of
division
has
changed
significantly
over
time
:
[
79
]
Rounding
towards
negative
infinity
,
though
different
from
most
languages
,
adds
consistency
.
For
instance
,
it
means
that
the
equation
(
a
+
b
)
//b
==
a//b
+
1
is
always
true
.
It
also
means
that
the
equation
b*
(
a//b
)
+
a
%
b
==
a
is
valid
for
both
positive
and
negative
values
of
a
.
However
,
maintaining
the
validity
of
this
equation
means
that
while
the
result
of
a
%
b
is
,
as
expected
,
in
the
half-open
interval
[
0
,
b
)
,
where
b
is
a
positive
integer
,
it
has
to
lie
in
the
interval
(
b
,
0
]
when
b
is
negative
.
[
80
]
Lemmatization..........................................................................................................................
Python
be
an
interpret
high-level
program
language
for
general-purpose
program
.
Created
by
Guido
van
Rossum
and
first
release
in
1991
,
Python
ha
a
design
philosophy
that
emphasize
code
readability
,
and
a
syntax
that
allow
programmer
to
express
concept
in
fewer
line
of
code
,
[
25
]
[
26
]
notably
use
significant
whitespace
.
It
provide
construct
that
enable
clear
program
on
both
small
and
large
scale
.
[
27
]
Python
feature
a
dynamic
type
system
and
automatic
memory
management
.
It
support
multiple
program
paradigm
,
include
object-oriented
,
imperative
,
functional
and
procedural
,
and
ha
a
large
and
comprehensive
standard
library
.
[
28
]
Python
interpreter
be
available
for
many
operate
system
.
CPython
,
the
reference
implementation
of
Python
,
be
open
source
software
[
29
]
and
ha
a
community-based
development
model
,
a
do
nearly
all
of
it
variant
implementation
.
CPython
be
manage
by
the
non-profit
Python
Software
Foundation
.
Python
wa
conceive
in
the
late
1980s
,
[
30
]
and
it
implementation
begin
in
December
1989
[
31
]
by
Guido
van
Rossum
at
Centrum
Wiskunde
&
Informatica
(
CWI
)
in
the
Netherlands
a
a
successor
to
the
ABC
language
(
itself
inspire
by
SETL
)
[
32
]
capable
of
exception
handle
and
interfacing
with
the
Amoeba
operate
system
.
[
6
]
Van
Rossum
remain
Python
's
principal
author
.
His
continue
central
role
in
Python
's
development
be
reflect
in
the
title
give
to
him
by
the
Python
community
:
Benevolent
Dictator
For
Life
(
BDFL
)
.
On
the
origin
of
Python
,
Van
Rossum
write
in
1996
:
[
33
]
...
In
December
1989
,
I
wa
look
for
a
``
hobby
''
program
project
that
would
keep
me
occupy
during
the
week
around
Christmas
.
My
office
...
would
be
close
,
but
I
have
a
home
computer
,
and
not
much
else
on
my
hand
.
I
decide
to
write
an
interpreter
for
the
new
script
language
I
have
be
think
about
lately
:
a
descendant
of
ABC
that
would
appeal
to
Unix/C
hacker
.
I
choose
Python
a
a
work
title
for
the
project
,
be
in
a
slightly
irreverent
mood
(
and
a
big
fan
of
Monty
Python
's
Flying
Circus
)
.
Python
2.0
wa
release
on
16
October
2000
and
have
many
major
new
feature
,
include
a
cycle-detecting
garbage
collector
and
support
for
Unicode
.
With
this
release
,
the
development
process
become
more
transparent
and
community-backed
.
[
34
]
Python
3.0
(
initially
call
Python
3000
or
py3k
)
wa
release
on
3
December
2008
after
a
long
test
period
.
It
be
a
major
revision
of
the
language
that
be
not
completely
backward-compatible
with
previous
version
.
[
35
]
However
,
many
of
it
major
feature
have
be
backported
to
the
Python
2.6.x
[
36
]
and
2.7.x
version
series
,
and
release
of
Python
3
include
the
2to3
utility
,
which
automate
the
translation
of
Python
2
code
to
Python
3
.
[
37
]
Python
2.7
's
end-of-life
date
(
a.k.a
.
EOL
,
sunset
date
)
wa
initially
set
at
2015
,
then
postpone
to
2020
out
of
concern
that
a
large
body
of
exist
code
could
not
easily
be
forward-ported
to
Python
3
.
[
38
]
[
39
]
Python
3.6
have
change
regard
UTF-8
(
in
Windows
,
PEP
528
and
PEP
529
)
and
Python
3.7.0b1
(
PEP
540
)
add
a
new
``
UTF-8
Mode
''
(
and
override
POSIX
locale
)
.
In
January
2017
,
Google
announce
work
on
a
Python
2.7
to
Go
transcompiler
to
improve
performance
under
concurrent
workload
.
[
40
]
Python
be
a
multi-paradigm
program
language
.
Object-oriented
program
and
structure
program
be
fully
support
,
and
many
of
it
feature
support
functional
program
and
aspect-oriented
program
(
include
by
metaprogramming
[
41
]
and
metaobjects
(
magic
method
)
)
.
[
42
]
Many
other
paradigm
be
support
via
extension
,
include
design
by
contract
[
43
]
[
44
]
and
logic
program
.
[
45
]
Python
us
dynamic
type
,
and
a
combination
of
reference
count
and
a
cycle-detecting
garbage
collector
for
memory
management
.
It
also
feature
dynamic
name
resolution
(
late
bind
)
,
which
bind
method
and
variable
name
during
program
execution
.
Python
's
design
offer
some
support
for
functional
program
in
the
Lisp
tradition
.
It
ha
filter
(
)
,
map
(
)
,
and
reduce
(
)
function
;
list
comprehension
,
dictionary
,
and
set
;
and
generator
expression
.
[
46
]
The
standard
library
ha
two
module
(
itertools
and
functools
)
that
implement
functional
tool
borrow
from
Haskell
and
Standard
ML
.
[
47
]
The
language
's
core
philosophy
be
summarize
in
the
document
The
Zen
of
Python
(
PEP
20
)
,
which
include
aphorism
such
a
:
[
48
]
Rather
than
have
all
of
it
functionality
build
into
it
core
,
Python
wa
design
to
be
highly
extensible
.
This
compact
modularity
ha
make
it
particularly
popular
a
a
mean
of
add
programmable
interface
to
exist
application
.
Van
Rossum
's
vision
of
a
small
core
language
with
a
large
standard
library
and
easily
extensible
interpreter
stem
from
his
frustration
with
ABC
,
which
espouse
the
opposite
approach
.
[
30
]
While
offer
choice
in
cod
methodology
,
the
Python
philosophy
reject
exuberant
syntax
(
such
a
that
of
Perl
)
in
favor
of
a
simpler
,
less-cluttered
grammar
.
As
Alex
Martelli
put
it
:
``
To
describe
something
a
'clever
'
be
not
consider
a
compliment
in
the
Python
culture
.
``
[
49
]
Python
's
philosophy
reject
the
Perl
``
there
be
more
than
one
way
to
do
it
''
approach
to
language
design
in
favor
of
``
there
should
be
one—and
preferably
only
one—obvious
way
to
do
it
''
.
[
48
]
Python
's
developer
strive
to
avoid
premature
optimization
,
and
reject
patch
to
non-critical
part
of
CPython
that
would
offer
marginal
increase
in
speed
at
the
cost
of
clarity
.
[
50
]
When
speed
be
important
,
a
Python
programmer
can
move
time-critical
function
to
extension
module
write
in
language
such
a
C
,
or
use
PyPy
,
a
just-in-time
compiler
.
Cython
be
also
available
,
which
translate
a
Python
script
into
C
and
make
direct
C-level
API
call
into
the
Python
interpreter
.
An
important
goal
of
Python
's
developer
be
keep
it
fun
to
use
.
This
be
reflect
in
the
language
's
name—a
tribute
to
the
British
comedy
group
Monty
Python
[
51
]
—and
in
occasionally
playful
approach
to
tutorial
and
reference
material
,
such
a
example
that
refer
to
spam
and
egg
(
from
a
famous
Monty
Python
sketch
)
instead
of
the
standard
foo
and
bar
.
[
52
]
[
53
]
A
common
neologism
in
the
Python
community
be
pythonic
,
which
can
have
a
wide
range
of
meaning
relate
to
program
style
.
To
say
that
code
be
pythonic
be
to
say
that
it
us
Python
idiom
well
,
that
it
be
natural
or
show
fluency
in
the
language
,
that
it
conform
with
Python
's
minimalist
philosophy
and
emphasis
on
readability
.
In
contrast
,
code
that
be
difficult
to
understand
or
read
like
a
rough
transcription
from
another
program
language
be
call
unpythonic
.
Users
and
admirer
of
Python
,
especially
those
consider
knowledgeable
or
experience
,
be
often
refer
to
a
Pythonists
,
Pythonistas
,
and
Pythoneers
.
[
54
]
[
55
]
Python
be
mean
to
be
an
easily
readable
language
.
Its
format
be
visually
unclutter
,
and
it
often
us
English
keywords
where
other
language
use
punctuation
.
Unlike
many
other
language
,
it
doe
not
use
curly
bracket
to
delimit
block
,
and
semicolon
after
statement
be
optional
.
It
ha
fewer
syntactic
exception
and
special
case
than
C
or
Pascal
.
[
56
]
Python
us
whitespace
indentation
,
rather
than
curly
bracket
or
keywords
,
to
delimit
block
.
An
increase
in
indentation
come
after
certain
statement
;
a
decrease
in
indentation
signify
the
end
of
the
current
block
.
[
57
]
This
feature
be
also
sometimes
term
the
off-side
rule
.
Python
's
statement
include
(
among
others
)
:
Python
doe
not
support
tail
call
optimization
or
first-class
continuation
,
and
,
accord
to
Guido
van
Rossum
,
it
never
will
.
[
59
]
[
60
]
However
,
better
support
for
coroutine-like
functionality
be
provide
in
2.5
,
by
extend
Python
's
generator
.
[
61
]
Before
2.5
,
generator
be
lazy
iterators
;
information
wa
pass
unidirectionally
out
of
the
generator
.
From
Python
2.5
,
it
be
possible
to
pas
information
back
into
a
generator
function
,
and
from
Python
3.3
,
the
information
can
be
pass
through
multiple
stack
level
.
[
62
]
Some
Python
expression
be
similar
to
language
such
a
C
and
Java
,
while
some
be
not
:
In
Python
,
a
distinction
between
expression
and
statement
be
rigidly
enforce
,
in
contrast
to
language
such
a
Common
Lisp
,
Scheme
,
or
Ruby
.
This
lead
to
duplicate
some
functionality
.
For
example
:
Statements
can
not
be
a
part
of
an
expression
,
so
list
and
other
comprehension
or
lambda
expression
,
all
be
expression
,
can
not
contain
statement
.
A
particular
case
of
this
be
that
an
assignment
statement
such
a
a
=
1
can
not
form
part
of
the
conditional
expression
of
a
conditional
statement
.
This
ha
the
advantage
of
avoid
a
classic
C
error
of
mistake
an
assignment
operator
=
for
an
equality
operator
==
in
condition
:
if
(
c
=
1
)
{
...
}
be
syntactically
valid
(
but
probably
unintended
)
C
code
but
if
c
=
1
:
...
cause
a
syntax
error
in
Python
.
Methods
on
object
be
function
attach
to
the
object
's
class
;
the
syntax
instance.method
(
argument
)
be
,
for
normal
method
and
function
,
syntactic
sugar
for
Class.method
(
instance
,
argument
)
.
Python
method
have
an
explicit
self
parameter
to
access
instance
data
,
in
contrast
to
the
implicit
self
(
or
this
)
in
some
other
object-oriented
program
language
(
e.g.
,
C++
,
Java
,
Objective-C
,
or
Ruby
)
.
[
71
]
Python
us
duck
type
and
ha
type
object
but
untyped
variable
name
.
Type
constraint
be
not
check
at
compile
time
;
rather
,
operation
on
an
object
may
fail
,
signify
that
the
give
object
be
not
of
a
suitable
type
.
Despite
be
dynamically
type
,
Python
be
strongly
type
,
forbid
operation
that
be
not
well-defined
(
for
example
,
add
a
number
to
a
string
)
rather
than
silently
attempt
to
make
sense
of
them
.
Python
allow
programmer
to
define
their
own
type
use
class
,
which
be
most
often
use
for
object-oriented
program
.
New
instance
of
class
be
construct
by
call
the
class
(
for
example
,
SpamClass
(
)
or
EggsClass
(
)
)
,
and
the
class
be
instance
of
the
metaclass
type
(
itself
an
instance
of
itself
)
,
allow
metaprogramming
and
reflection
.
Before
version
3.0
,
Python
have
two
kind
of
class
:
old-style
and
new-style
.
[
72
]
The
syntax
of
both
style
be
the
same
,
the
difference
be
whether
the
class
object
be
inherit
from
,
directly
or
indirectly
(
all
new-style
class
inherit
from
object
and
be
instance
of
type
)
.
In
version
of
Python
2
from
Python
2.2
onwards
,
both
kind
of
class
can
be
use
.
Old-style
class
be
eliminate
in
Python
3.0
.
The
long
term
plan
be
to
support
gradual
type
[
73
]
and
from
Python
3.5
,
the
syntax
of
the
language
allow
specify
static
type
but
they
be
not
check
in
the
default
implementation
,
CPython
.
An
experimental
optional
static
type
checker
name
mypy
support
compile-time
type
check
.
[
74
]
a
=
(
4.0
,
'string
'
,
True
)
.__add__
(
(
'hi
'
,
)
)
now
a
give
(
4.0
,
'string
'
,
True
,
'hi
'
)
Python
ha
the
usual
C
arithmetic
operator
(
+
,
-
,
*
,
/
,
%
)
.
It
also
ha
**
for
exponentiation
,
e.g
.
5**3
==
125
and
9**0.5
==
3.0
,
and
a
new
matrix
multiply
@
operator
be
include
in
version
3.5
.
[
76
]
Additionally
,
it
ha
a
unary
operator
(
~
)
,
which
essentially
invert
all
the
bit
of
it
one
argument
.
For
integer
,
this
mean
~x=-x-1
.
[
77
]
Other
operator
include
bitwise
shift
operator
x
<
<
y
,
which
shift
x
to
the
leave
y
place
,
the
same
a
x*
(
2**y
)
,
and
x
>
>
y
,
which
shift
x
to
the
right
y
place
,
the
same
a
x/
(
2**y
)
.
[
78
]
The
behavior
of
division
ha
change
significantly
over
time
:
[
79
]
Rounding
towards
negative
infinity
,
though
different
from
most
language
,
add
consistency
.
For
instance
,
it
mean
that
the
equation
(
a
+
b
)
//b
==
a//b
+
1
be
always
true
.
It
also
mean
that
the
equation
b*
(
a//b
)
+
a
%
b
==
a
be
valid
for
both
positive
and
negative
value
of
a
.
However
,
maintain
the
validity
of
this
equation
mean
that
while
the
result
of
a
%
b
be
,
a
expect
,
in
the
half-open
interval
[
0
,
b
)
,
where
b
be
a
positive
integer
,
it
ha
to
lie
in
the
interval
(
b
,
0
]
when
b
be
negative
.
[
80
]
Bigrams..........................................................................................................................
